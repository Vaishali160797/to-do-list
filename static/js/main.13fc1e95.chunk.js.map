{"version":3,"sources":["components/todo/todo.js","App.js","index.js"],"names":["Todo","useState","inputdata","setInputData","lists","localStorage","getItem","JSON","parse","getLocalData","items","setItems","isEditItem","setIsEditItem","toggleButton","setToggleButton","addItem","map","curElem","id","name","myNewInput","Date","getTime","toString","alert","useEffect","setItem","stringify","className","src","alt","type","placeholder","value","onChange","e","target","onClick","index","item_todo_edited","find","editItem","updateItem","filter","deleteItem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNA6GeA,EAlGF,WACT,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAVT,WACjB,IAAMG,EAAOC,aAAaC,QAAQ,YAClC,OAAIF,EACOG,KAAKC,MAAMJ,GAEZ,GAKyBK,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCV,mBAAS,IAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAAuCZ,oBAAS,GAAhD,mBAAOa,EAAP,KAAqBC,EAArB,KAEMC,EAAU,WACZ,GAAId,EAEE,GAAGA,GAAaY,EAClBH,EACID,EAAMO,KAAI,SAACC,GACP,OAAGA,EAAQC,KAAOP,EACd,2BAAWM,GAAX,IAAoBE,KAAKlB,IAEtBgB,MAGff,EAAa,IACbU,EAAc,MACdE,GAAgB,OAEhB,CACA,IAAMM,EAAY,CACdF,IAAI,IAAIG,MAAOC,UAAUC,WACzBJ,KAAMlB,GAEVS,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBlB,EAAa,SApBbsB,MAAM,sBAgDd,OAJAC,qBAAU,WACNrB,aAAasB,QAAQ,WAAYpB,KAAKqB,UAAUlB,MACjD,CAACA,IAGA,mCACI,qBAAKmB,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,mCACI,qBAAKC,IAAI,oBAAoBC,IAAI,WACjC,+DAEJ,sBAAKF,UAAU,WAAf,UACI,uBAAOG,KAAK,OAAOC,YAAY,iBAAYJ,UAAU,eAAeK,MAAOhC,EAC3EiC,SAAU,SAACC,GAAD,OAAOjC,EAAaiC,EAAEC,OAAOH,UACtCpB,EACG,mBAAGe,UAAU,qBAAqBS,QAAStB,IAE3C,mBAAGa,UAAU,qBAAqBS,QAAStB,OAInD,sBAAKa,UAAU,YAAf,UACKnB,EAAMO,KAAI,SAACC,GACR,OACI,sBAAKW,UAAU,WAAf,UACA,6BAAKX,EAAQE,OACb,sBAAKS,UAAU,WAAf,UACI,mBAAGA,UAAU,sBAAsBS,QAAS,kBAhD3D,SAACC,GACd,IAAMC,EAAmB9B,EAAM+B,MAAK,SAACvB,GACjC,OAAOA,EAAQC,KAAOoB,KAE1BpC,EAAaqC,EAAiBpB,MAC9BP,EAAc0B,GACdxB,GAAgB,GA0C8D2B,CAASxB,EAAQC,OACnE,mBAAGU,UAAU,2BAA2BS,QAAS,kBAzC/D,SAACC,GAEf,IAAMI,EAAajC,EAAMkC,QAAO,SAAC1B,GAC7B,OAAOA,EAAQC,KAAOoB,KAE1B5B,EAASgC,GAqCmBE,CAAW3B,EAAQC,YALQD,EAAQC,OAHnD,OAeA,qBAAKU,UAAU,YAAf,SAA2B,wBAAQA,UAAU,eAAe,oBAAkB,aAC9ES,QA1CC,WACb3B,EAAS,KAwC8B,SAE3B,0DC3FLmC,MARf,WACE,OACE,mCACA,cAAC,EAAD,OCDJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.13fc1e95.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport \"./style.css\";\r\n\r\nconst getLocalData = () =>{\r\n    const lists= localStorage.getItem(\"todolist\");\r\n    if (lists){\r\n        return JSON.parse(lists);\r\n    }else {\r\n        return[];\r\n    }\r\n}\r\nconst Todo = () => {\r\n    const [inputdata, setInputData] = useState(\"\");\r\n    const [items, setItems] = useState(getLocalData());\r\n    const [isEditItem, setIsEditItem] = useState(\"\");\r\n    const [toggleButton, setToggleButton] =useState(false);\r\n\r\n    const addItem = () => {\r\n        if(!inputdata) {\r\n            alert(\"plz fill the data\");\r\n        }else if(inputdata && toggleButton){\r\n            setItems(\r\n                items.map((curElem) =>{\r\n                    if(curElem.id === isEditItem){\r\n                        return{ ...curElem, name:inputdata };\r\n                    }\r\n                    return curElem;\r\n                })\r\n            );\r\n            setInputData([]);\r\n            setIsEditItem(null);\r\n            setToggleButton(false);\r\n        }\r\n        else{\r\n            const myNewInput ={\r\n                id: new Date().getTime().toString(),\r\n                name: inputdata, \r\n            }\r\n            setItems([...items, myNewInput]);\r\n            setInputData(\"\");\r\n        }\r\n    };\r\n\r\n    const editItem = (index) =>{\r\n        const item_todo_edited = items.find((curElem) =>{\r\n            return curElem.id === index;\r\n        });\r\n        setInputData(item_todo_edited.name);\r\n        setIsEditItem(index);\r\n        setToggleButton(true);\r\n    };\r\n    const deleteItem =(index) =>\r\n    {\r\n        const updateItem = items.filter((curElem) =>{\r\n            return curElem.id !== index;\r\n        });\r\n        setItems(updateItem);\r\n    };\r\n\r\n    const removeAll =() =>{\r\n        setItems([]);\r\n    };\r\n\r\n    useEffect(() =>{\r\n        localStorage.setItem(\"todolist\", JSON.stringify(items));\r\n    }, [items]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-div\">\r\n                <div className=\"child-div\">\r\n                    <figure>\r\n                        <img src=\"./images/todo.svg\" alt=\"images\"/>\r\n                        <figcaption>Add Your List Here</figcaption>\r\n                    </figure>\r\n                    <div className=\"addItems\">\r\n                        <input type=\"text\" placeholder=\"✍add item\" className=\"form-control\" value={inputdata} \r\n                        onChange={(e) => setInputData(e.target.value)}/>\r\n                        {toggleButton ? (\r\n                            <i className=\"fa fa-edit add-btn\" onClick={addItem}></i>\r\n                        ):(\r\n                            <i className=\"fa fa-plus add-btn\" onClick={addItem}></i>\r\n                        )}\r\n                       \r\n                    </div>\r\n                    <div className=\"showItems\">\r\n                        {items.map((curElem) => {\r\n                            return(\r\n                                <div className=\"eachItem\" key={curElem.id}>\r\n                                <h3>{curElem.name}</h3>\r\n                                <div className=\"todo-btn\">\r\n                                    <i className=\"far fa-edit add-btn\" onClick={() => editItem(curElem.id)}></i>\r\n                                    <i className=\"far fa-trash-alt add-btn\" onClick={() =>\r\n                                    deleteItem(curElem.id)}></i>\r\n                                </div>\r\n                            </div>\r\n                            );\r\n                        })};\r\n                    </div>\r\n\r\n                    <div className=\"showItems\"><button className=\"btn effect04\" data-sm-link-text=\"Remove All\"\r\n                    onClick={removeAll}>\r\n                    <span>Check List</span></button></div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo;\r\n","import React from 'react';\nimport Todo from './components/todo/todo.js';\n\nfunction App() {\n  return (\n    <>\n    <Todo />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}